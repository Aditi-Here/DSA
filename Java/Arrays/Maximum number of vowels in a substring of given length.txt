Maximum number of vowels in a substring of array of given length

Given a string s and an integer k, return the maximum number of vowel letters in any substring of s with length k.

Vowel letters in English are 'a', 'e', 'i', 'o', and 'u'.

 

Example 1:

Input: s = "abciiidef", k = 3
Output: 3
Explanation: The substring "iii" contains 3 vowel letters.
Example 2:

Input: s = "aeiou", k = 2
Output: 2
Explanation: Any substring of length 2 contains 2 vowels.
Example 3:

Input: s = "leetcode", k = 3
Output: 2
Explanation: "lee", "eet" and "ode" contain 2 vowels.
 

Constraints:

1 <= s.length <= 105
s consists of lowercase English letters.
1 <= k <= s.length


---------------------------------------------------------------------------------------------------------------------

class Solution {
    public int maxVowels(String s, int k) {
        int vowelsCount = 0;
        for(int i = 0 ; i < k ; ++i){
            if((s.charAt(i)=='a') || (s.charAt(i)=='e') || (s.charAt(i)=='i') || (s.charAt(i)=='o') || (s.charAt(i)=='u')){
                vowelsCount += 1;
            }
        }
        int max = vowelsCount;
        int n = s.length();
        for(int i = k,j = 0 ; i < n ; ++i, ++j){
            if((s.charAt(i)=='a') || (s.charAt(i)=='e') || (s.charAt(i)=='i') || (s.charAt(i)=='o') || (s.charAt(i)=='u')){
                vowelsCount += 1;
            }
            if((s.charAt(j)=='a') || (s.charAt(j)=='e') || (s.charAt(j)=='i')||(s.charAt(j)=='o')||s.charAt(j)=='u'){
                vowelsCount -= 1;
            }
            max = (max>vowelsCount)?max:vowelsCount;
        }
        return max;
    }
}

*******************************************************************************************

Q3 - Maximum Number of Vowels in a Substring of Given Length
Question Link: https://leetcode.com/problems/maximum-number-of-vowels-in-a-substring-of-given-length/description/

Time Complexity: O(n)
Space Complexity O(1) - (Ignoring the space taken up by input array)
*/

import java.util.Scanner;

class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
		int k = sc.nextInt();
		String s = sc.next();
		Solution obj = new Solution();
		System.out.print(obj.maxVowels(s, k));
    }
}

class Solution {
    public int maxVowels(String s, int k) {
        int n = s.length();
		int ans = 0;
		int curr = 0;
		for(int i=0 ; i<k ; i++) {
			curr += isVowel(s.charAt(i));
		}
		ans = Math.max(ans, curr);
		for(int i=k ; i<n ; i++) {
			curr += isVowel(s.charAt(i));
			curr -= isVowel(s.charAt(i-k));
			ans = Math.max(ans, curr);
		}
		return ans;
    }
	private int isVowel(char c) {
		if(c=='a') return 1;
		if(c=='e') return 1;
		if(c=='i') return 1;
		if(c=='o') return 1;
		if(c=='u') return 1;
		return 0;
	}
}