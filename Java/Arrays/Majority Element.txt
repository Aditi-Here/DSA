Majority Element

Given an array nums of size n, return the majority element.

The majority element is the element that appears more than ⌊n / 2⌋ times. You may assume that the majority element always exists in the array.

 

Example 1:

Input: nums = [3,2,3]
Output: 3
Example 2:

Input: nums = [2,2,1,1,1,2,2]
Output: 2
 

Constraints:

n == nums.length
1 <= n <= 5 * 104
-109 <= nums[i] <= 109


https://leetcode.com/problems/majority-element/description/
------------------------------------------------------------------------------------------------------------------------------------------------

class Solution {
    public int majorityElement(int[] nums) {
        int n = nums.length;
        int mid = Math.floorDiv(n , 2);
        Arrays.sort(nums);
        int count = 0;
        for(int i =0; i < n-1 ; i++){
            
            if(nums[i] == nums[i+1]){
                count += 1;
            }
            else{
                count = 0;
            }
            if(count == mid) return nums[i];
        }
        return nums[0];
    }
}
