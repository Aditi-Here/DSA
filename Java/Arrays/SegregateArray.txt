Segregate Even and Odd numbers
Last Updated : 27 Feb, 2024
Given an array A[], write a function that segregates even and odd numbers. The functions should put all even numbers first, and then odd numbers.

 Example:  

Input  = {12, 34, 45, 9, 8, 90, 3}
Output = {12, 34, 8, 90, 45, 9, 3}
In the output, the order of numbers can be changed, i.e., in the above example, 34 can come before 12 and 3 can come before 9.



https://www.geeksforgeeks.org/segregate-even-and-odd-numbers/


------------------------------------------------------------------------------------------------------------------------------------------------









import java.util.*;

public class SegregatesEvenOdd {
    public int[] Sagregate(int[] arr){
        ArrayList<Integer> evenArr = new ArrayList<>();
        ArrayList<Integer> oddArr = new ArrayList<>();
        for(int i : arr){
            if(i%2==0){
                evenArr.add(i);
            }
            else oddArr.add(i);
        }
        for(int i = 0; i < evenArr.size() ; i++){
            arr[i] = evenArr.get(i);
        }
        int e = evenArr.size();
        for(int i = 0; i < oddArr.size() ; i++){
            arr[e + i ] = oddArr.get(i);
        }
        return arr;
    }
    public static void main(String[] args) {
        SegregatesEvenOdd sg = new SegregatesEvenOdd();
        int [] inputArr = {12,34,45,9,8,90,3};
        int[] arr = sg.Sagregate(inputArr);
        for(int i = 0; i < arr.length; i++){
            System.out.print(arr[i] + " ");
        }
    }
}
