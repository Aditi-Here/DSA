Delete NOde in Doubly Linked Lists

Given a doubly linked list and a position. The task is to delete a node from given position (position starts from 1) in a doubly linked list.

Example 1:

Input:
LinkedList = 1 <--> 3 <--> 4 
x = 3
Output: 1 3  
Explanation: After deleting the node at
position 3 (position starts from 1),
the linked list will be now as 1->3.

https://www.geeksforgeeks.org/problems/delete-node-in-doubly-linked-list/1
-----------------------------------------------------------------------------------------

class Solution
{
    // function returns the head of the linkedlist
    Node deleteNode(Node head,int x)
    {
	// Your code here
	int cnt = 1;
	Node curr = head;
	Node prev = null;
	if(x == 1){
	    curr.next.prev = null;
	    return curr.next;
	}
	while(cnt<x){
	    cnt++;
	    curr = curr.next;
	}
	Node right = curr.next;
	Node left = curr.prev;
	
	left.next = right;
	
	if(right != null){
	    right.prev = left;
	}
	return head;
    }
}