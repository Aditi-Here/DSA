/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

// Link : https://leetcode.com/problems/binary-tree-preorder-traversal/

class Solution {
    void preorderHelp(TreeNode cur, List<Integer> ans) {
        if(cur == null)
            return;
        
        // Cur Node
        ans.add(cur.val);
        
        // Left
        preorderHelp(cur.left, ans);

        // Right
        preorderHelp(cur.right, ans);
    }
    
    public List<Integer> preorderTraversal(TreeNode root) {
        List<Integer> ans = new ArrayList<>();
        preorderHelp(root, ans);
        return ans;
    }
}