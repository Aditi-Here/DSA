https://www.geeksforgeeks.org/print-left-view-binary-tree/
--------------------------------------------------------------------------------
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> ans = new ArrayList<>();
        Queue<TreeNode> q = new LinkedList<>();
        if(root == null) return ans;
        q.add(root);
        while(q.size()>0){
            int size = q.size();
            for(int i = 0 ; i < size ; i++){
                TreeNode curNode = q.poll();
                if(i == 0) ans.add(curNode.val);
                if(curNode.left != null){
                     q.add(curNode.left);
                 }
                if(curNode.right != null){
                     q.add(curNode.right);
                 }
                
            }
        }
        return ans;
    }
}